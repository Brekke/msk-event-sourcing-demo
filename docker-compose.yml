version: '3'
services:
#  odfe-node1:
#    image: amazon/opendistro-for-elasticsearch:1.3.0
#    container_name: odfe-node1
#    environment:
#      - cluster.name=odfe-cluster
#      - node.name=odfe-node1
#      - discovery.seed_hosts=odfe-node1,odfe-node2
#      - cluster.initial_master_nodes=odfe-node1,odfe-node2
#      - bootstrap.memory_lock=true # along with the memlock settings below, disables swapping
#      - "ES_JAVA_OPTS=-Xms512m -Xmx512m" # minimum and maximum Java heap size, recommend setting both to 50% of system RAM
#    ulimits:
#      memlock:
#        soft: -1
#        hard: -1
#      nofile:
#        soft: 65536 # maximum number of open files for the Elasticsearch user, set to at least 65536 on modern systems
#        hard: 65536
#    volumes:
#      - odfe-data1:/usr/share/elasticsearch/data
#    ports:
#      - 9700:9200
#      - 9600:9600 # required for Performance Analyzer
#    networks:
#      - odfe-net
#  odfe-node2:
#    image: amazon/opendistro-for-elasticsearch:1.3.0
#    container_name: odfe-node2
#    environment:
#      - cluster.name=odfe-cluster
#      - node.name=odfe-node2
#      - discovery.seed_hosts=odfe-node1,odfe-node2
#      - cluster.initial_master_nodes=odfe-node1,odfe-node2
#      - bootstrap.memory_lock=true
#      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
#    ulimits:
#      memlock:
#        soft: -1
#        hard: -1
#      nofile:
#        soft: 65536
#        hard: 65536
#    volumes:
#      - odfe-data2:/usr/share/elasticsearch/data
#    networks:
#      - odfe-net
#  kibana:
#    image: amazon/opendistro-for-elasticsearch-kibana:1.3.0
#    container_name: odfe-kibana
#    ports:
#      - 5601:5601
#    expose:
#      - "5601"
#    environment:
#      ELASTICSEARCH_URL: https://odfe-node1:9700
#      ELASTICSEARCH_HOSTS: https://odfe-node1:9700
#    networks:
#      - odfe-net
#  zookeeper:
#    image: wurstmeister/zookeeper
#  kafka:
#    image: wurstmeister/kafka
#    ports:
#      - 9092:9092
#    environment:
#      KAFKA_ADVERTISED_HOST_NAME: localhost
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181

#volumes:
#  odfe-data1:
#  odfe-data2:
#
#networks:
#  odfe-net:


  zookeeper:
    image: 'confluentinc/cp-zookeeper:5.0.0'
    restart: always
    hostname: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zookeeper:2888:3888
      COMPONENT: zookeeper
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: 'confluentinc/cp-kafka:5.0.0'
    hostname: broker
    stop_grace_period: 120s
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "8500:8500"
    environment:
      COMPONENT: kafka
      KAFKA_BROKER_ID: 1001
      KAFKA_RESERVED_BROKER_MAX_ID: 10000
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://broker:9092'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
      KAFKA_JMX_OPTS: '-Dcom.sun.management.jmxremote=true -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=broker -Djava.net.preferIPv4Stack=true -Dcom.sun.management.jmxremote.rmi.port=8500'

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.4.0
    restart: always
    hostname: elasticsearch
    environment:
      "discovery.type": single-node
    ports:
      - "9200:9200"
      - "9300:9300"
